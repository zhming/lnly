<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lnly.common.dao.SmallClassMapper">
    <resultMap id="BaseResultMap" type="com.lnly.common.model.SmallClass">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="year" property="year" jdbcType="VARCHAR"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="county" property="county" jdbcType="VARCHAR"/>
        <result column="town" property="town" jdbcType="VARCHAR"/>
        <result column="village" property="village" jdbcType="VARCHAR"/>
        <result column="forest_class" property="forestClass" jdbcType="VARCHAR"/>
        <result column="small_class" property="smallClass" jdbcType="VARCHAR"/>
        <result column="area" property="area" jdbcType="DOUBLE"/>
        <result column="sqdj" property="sqdj" jdbcType="VARCHAR"/>
        <result column="forest_belong" property="forestBelong" jdbcType="VARCHAR"/>
        <result column="land_belong" property="landBelong" jdbcType="VARCHAR"/>
        <result column="xdm" property="xdm" jdbcType="VARCHAR"/>
        <result column="land_zl" property="landZl" jdbcType="VARCHAR"/>
        <result column="source" property="source" jdbcType="VARCHAR"/>
        <result column="forest_zl" property="forestZl" jdbcType="VARCHAR"/>
        <result column="comment" property="comment" jdbcType="TIMESTAMP"/>
        <result column="country_distributed" property="countryDistributed" />
        <result column="local_distributed" property="localDistributed" />
        <result column="country_diff" property="countryDiff" />
        <result column="local_diff" property="localDiff" />
    </resultMap>



    <sql id="Base_Column_List">
         id,
         year,
      city,
      county,
      town,
      village,
      forest_class,
      small_class,
      area,
      sqdj,
      forest_belong,
      land_belong,
      xdm,
      land_zl,
      source,
      forest_zl,
      country_distributed,
      local_distributed,
      country_diff,
      local_diff,
      comment
  </sql>
    <sql id="limit_sql">
        <if test="page_sql != null and page_sql != ''">
            ${page_sql}
        </if>
    </sql>

    <sql id="where_all">
        <where>
            1 = 1
            <if test="year != null and year !='' ">
                and year = #{year, jdbcType=VARCHAR}
            </if>
            <if test="city != null and city !='' ">
             and   city like  CONCAT("%",#{city},"%")
            </if>
            <if test="county != null and county !='' ">
                and   county like  CONCAT("%",#{county},"%")
            </if>
            <if test="town != null and town !='' ">
                and   town like  CONCAT("%",#{town},"%")
            </if>
            <if test="village != null and village !='' ">
                and   village like  CONCAT("%",#{village},"%")
            </if>

        </where>
    </sql>
    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_small_class
        <include refid="where_all"/>
        <include refid="limit_sql"/>
    </select>
    <select id="findCount" resultMap="BaseResultMap">
        select count(id) from tb_small_class
        <include refid="where_all"/>
    </select>

    <select id="findSmallList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_small_class
        <include refid="where_small_list"/>
        <include refid="limit_sql"/>
    </select>

    <select id="findSmallListCount" resultMap="BaseResultMap">
        select
       count(1)
        from tb_small_class
        <include refid="where_small_list"/>
    </select>


    <sql id="where_small_list">
        <where>
            1 = 1
            <if test="year != null and year !='' ">
                and year = #{year, jdbcType=VARCHAR}
            </if>
            <if test="city != null and city !='' ">
                and city = #{city,jdbcType=VARCHAR}
            </if>
            <if test="county != null and county !='' ">
                and county = #{county,jdbcType=VARCHAR}
            </if>
            <if test="town != null and town !='' ">
                and town = #{town,jdbcType=VARCHAR}
            </if>
            <if test="village != null and village !='' ">
                and village = #{village,jdbcType=VARCHAR}
            </if>

            <if test="forestClass != null and forestClass !='' ">
                and forest_class = #{forestClass,jdbcType=VARCHAR}
            </if>

            <if test="smallClass != null and smallClass !='' ">
                and small_class = #{smallClass,jdbcType=VARCHAR}
            </if>


            <if test="countryDiff != null and countryDiff > 0 ">
                and country_diff > 0
            </if>


            <if test="localDiff != null and localDiff > 0 ">
                and local_diff > 0
            </if>

        </where>
    </sql>


    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from tb_small_class
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from tb_small_class
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from tb_small_class
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.lnly.common.model.CountryCompensationStandard">
        insert into tb_small_class (
            id,
            year,
            city,
            county,
            town,
            village,
            forest_class,
            small_class,
            area,
            sqdj,
            forest_belong,
            land_belong,
            xdm,
            land_zl,
            source,
            forest_zl,
            comment,
            create_user,
            update_user
            )
        values (
            #{id,jdbcType=BIGINT},
            #{year,jdbcType=BIGINT},
            #{city,jdbcType=VARCHAR},
            #{county,jdbcType=VARCHAR},
            #{town,jdbcType=VARCHAR},
            #{village,jdbcType=VARCHAR},
            #{forestClass,jdbcType=VARCHAR},
            #{smallClass,jdbcType=VARCHAR},
            #{sqdj,jdbcType=VARCHAR},
            #{area,jdbcType=DOUBLE},
            #{forestBelong,jdbcType=VARCHAR},
            #{landBelong,jdbcType=VARCHAR},
            #{xdm,jdbcType=VARCHAR},
            #{landZl,jdbcType=VARCHAR},
            #{source,jdbcType=VARCHAR},
            #{forestZl,jdbcType=VARCHAR},
            #{comment,jdbcType=VARCHAR},
            #{createUser,jdbcType=VARCHAR},
            #{updateUser,jdbcType=VARCHAR},
        )
    </insert>

    <update id="update" parameterType="com.lnly.common.model.SmallClass">
        update tb_small_class
        <set>
            <if test="year != null and year != '' ">
                year = #{year,jdbcType=VARCHAR},
            </if>
            <if test="city != null and city != '' ">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="county != null and county != '' ">
                county = #{county,jdbcType=VARCHAR},
            </if>
            <if test="town != null and town != '' ">
                town = #{town,jdbcType=VARCHAR},
            </if>
            <if test="village != null and village != '' ">
                village = #{village,jdbcType=VARCHAR},
            </if>
            <if test="forest_class != null and forest_class != '' ">
                forest_class = #{forestClass,jdbcType=VARCHAR},
            </if>
            <if test="smallClass != null and smallClass != '' ">
                small_class = #{smallClass,jdbcType=VARCHAR},
            </if>
            <if test="sqdj != null and sqdj != '' ">
                sqdj = #{sqdj,jdbcType=VARCHAR},
            </if>
            <if test="area != null and area != '' ">
                area = #{area,jdbcType=DOUBLE},
            </if>
            <if test="forestBelong != null and forestBelong != '' ">
                forest_belong = #{forestBelong,jdbcType=VARCHAR},
            </if>
            <if test="landBelong != null and landBelong != '' ">
                land_belong = #{landBelong,jdbcType=VARCHAR},
            </if>
            <if test="xdm != null and xdm != '' ">
                xdm = #{xdm,jdbcType=VARCHAR},
            </if>
            <if test="landZl != null and landZl != '' ">
                land_zl = #{landZl,jdbcType=VARCHAR},
            </if>
            <if test="source != null and source != '' ">
                year = #{source,jdbcType=VARCHAR},
            </if>
            <if test="forestZl != null and forestZl != '' ">
                forest_zl = #{forestZl,jdbcType=VARCHAR},
            </if>
            <if test="comment != null and comment != '' ">
                comment = #{comment,jdbcType=VARCHAR},
            </if>
            <if test="updateUser != updateUser and year != '' ">
                update_user = #{updateUser,jdbcType=VARCHAR}
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>



</mapper>
