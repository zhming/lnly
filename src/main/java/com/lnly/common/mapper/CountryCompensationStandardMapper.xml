<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lnly.common.dao.CountryCompensationStandardMapper" >
  <resultMap id="BaseResultMap" type="com.lnly.common.model.CountryCompensationStandard" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="year" property="year" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="county" property="county" jdbcType="VARCHAR" />
    <result column="area" property="area" jdbcType="DOUBLE" />
    <result column="country_zbje" property="countryZbje" jdbcType="DOUBLE" />
    <result column="other_zbje" property="otherZbje" jdbcType="DOUBLE" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIGINT" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="delete_flag" property="deleteFlag" jdbcType="CHAR" /> 
  </resultMap>
  <sql id="Base_Column_List" >
    id, year, city, county, area, country_zbje,other_zbje,comment, create_user,update_user,create_time,update_time
  </sql>
  <sql id="limit_sql">
  	   <if test="page_sql != null and page_sql != ''">
      	${page_sql}
      </if>
  </sql>
  
  <sql id="where_all">
  	<where>
        1 = 1
  	<if test="searchContent != null and searchContent !='' " >
        and (
        city like  CONCAT("%",#{searchContent},"%")
        or
        county like  CONCAT("%",#{searchContent},"%")
        or
        town like  CONCAT("%",#{searchContent},"%")

        )
      </if>
      <if test="year != null and year !='' " >
        and 
        year =  #{year,jdbcType=VARCHAR}
      </if>
      </where>
  </sql>

  

  <select id="findAll" resultMap="BaseResultMap" >
  	 select 
    <include refid="Base_Column_List" />
    from tb_country_compensation_standard
    <include refid="where_all"/>
    <include refid="limit_sql" />
  </select>
  <select id="findCount" resultMap="BaseResultMap" >
 	 select count(id) from  tb_country_compensation_standard
  	<include refid="where_all" />
  </select>
  

  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_country_compensation_standard
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_country_compensation_standard
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.lnly.common.model.CountryCompensationStandard" >
    insert into tb_country_compensation_standard ( id, year, city, county, area, country_zbje,other_zbje,comment,status, create_user,update_user,create_time,update_time
      )
    values (#{id,jdbcType=BIGINT}, #{year,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR},
      #{county,jdbcType=DOUBLE}, #{area,jdbcType=DOUBLE},#{countryZbje,jdbcType=DOUBLE},#{otherZbje,jdbcType=DOUBLE},
      #{comment,jdbcType=VARCHAR},#{status,jdbcType=BIGINT},#{createUser,jdbcType=VARCHAR},
      #{updateUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.lnly.common.model.CountryCompensationStandard" >
    insert into tb_country_compensation_standard
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="county != null" >
        county,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="countryZbje != null" >
        country_zbje,
      </if>
      <if test="otherZbje != null" >
        other_zbje,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="year != null" >
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null" >
        #{county,jdbcType=VARCHAR},
      </if>

      <if test="area != null" >
        #{area,jdbcType=DOUBLE},
      </if>
      <if test="country_zbje != null" >
        #{countryZbje,jdbcType=DOUBLE},
      </if>
      <if test="other_zbje != null" >
        #{otherZbje,jdbcType=DOUBLE},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIGINT},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
     <if test="update_user != null" >
      #{updateUser,jdbcType=VARCHAR},
    </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>

    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lnly.common.model.CountryCompensationStandard" >
    update tb_country_compensation_standard
    <set >
      <if test="year != null" >
        year =  #{year,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null" >
        county = #{county,jdbcType=VARCHAR},
      </if>

      <if test="area != null" >
        area =  #{area,jdbcType=DOUBLE},
      </if>
      <if test="countryZbje != null" >
        country_zbje = #{countryZbje,jdbcType=DOUBLE},
      </if>
      <if test="otherZbje != null" >
        other_zbje = #{otherZbje,jdbcType=DOUBLE},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        update_user =  #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lnly.common.model.CountryCompensationStandard" >
    update tb_country_compensation_standard
    set year = #{year,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      county = #{county,jdbcType=VARCHAR},
      area = #{area,jdbcType=DOUBLE},
       country_zbje = #{countryZbje,jdbcType=DOUBLE},
        other_zbje = #{otherZbje,jdbcType=DOUBLE},
         comment = #{comment,jdbcType=VARCHAR},
       status = #{status,jdbcType=BIGINT}
      update_time = #{updateTime,jdbcType=TIMESTAMP},

    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
